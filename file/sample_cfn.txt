AWSTemplateFormatVersion: 2010-09-09
#===================================================================================================
# Description: Templates for creating S3-related resources.
#===================================================================================================
#=====================================================================
# Parameters
#=====================================================================
Parameters:
    #-------------------------------------------------
    # Common parameters
    #-------------------------------------------------
    System:
        Description: "System name"
        Type: String

    #-------------------------------------------------
    # S3-related parameters
    #-------------------------------------------------
    S3Bucket:
        Description: "S3 Bucket"
        Type: String

    S3BucketSnowflake:
        Description: "S3 Bucket"
        Type: String

    S3BucketSnowflakeBC:
        Description: "S3 Bucket"
        Type: String

    S3BucketIntegratedMaster:
        Description: "S3 Bucket"
        Type: String

#=====================================================================
# Resources
#=====================================================================
Resources:
    #-------------------------------------------------
    # S3 Bucket
    #-------------------------------------------------
    CfnS3Bucket:
        Type: "AWS::S3::Bucket"
        Properties:
            BucketName: !Ref S3Bucket
            Tags:
                - Key: "System"
                  Value: !Ref System
                - Key: "Name"
                  Value: !Ref S3Bucket
            VersioningConfiguration:
                Status: "Enabled"
    #-------------------------------------------------
    # S3 Bucket(Snowflake)
    #-------------------------------------------------
    CfnS3BucketSnowflake:
        Type: "AWS::S3::Bucket"
        Properties:
            BucketName: !Ref S3BucketSnowflake
            Tags:
                - Key: "System"
                  Value: !Ref System
                - Key: "Name"
                  Value: !Ref S3BucketSnowflake
            VersioningConfiguration:
                Status: "Enabled"

    #-------------------------------------------------
    # S3 Bucket(Snowflake BC)
    #-------------------------------------------------
    CfnS3BucketSnowflakeBC:
        Type: "AWS::S3::Bucket"
        Properties:
            BucketName: !Ref S3BucketSnowflakeBC
            Tags:
                - Key: "System"
                  Value: !Ref System
                - Key: "Name"
                  Value: !Ref S3BucketSnowflakeBC
            VersioningConfiguration:
                Status: "Enabled"

    #-------------------------------------------------
    # S3 Bucket(Integrated Master)
    #-------------------------------------------------
    CfnS3BucketIntegratedMaster:
        Type: "AWS::S3::Bucket"
        Properties:
            BucketName: !Ref S3BucketIntegratedMaster
            Tags:
                - Key: "System"
                  Value: "gamma"
                - Key: "Name"
                  Value: !Ref S3BucketIntegratedMaster
            BucketEncryption:
                ServerSideEncryptionConfiguration:
                    - ServerSideEncryptionByDefault:
                          SSEAlgorithm: "AES256"
                      BucketKeyEnabled: false
            VersioningConfiguration:
                Status: "Enabled"
            OwnershipControls:
                Rules:
                    - ObjectOwnership: "BucketOwnerEnforced"
            PublicAccessBlockConfiguration:
                BlockPublicAcls: true
                BlockPublicPolicy: true
                IgnorePublicAcls: true
                RestrictPublicBuckets: true

    CfnS3BucketIntegratedMasterPolicy:
        Type: "AWS::S3::BucketPolicy"
        Properties:
            Bucket: !Ref CfnS3BucketIntegratedMaster
            PolicyDocument:
                Version: "2012-10-17"
                Statement:
                    - Effect: "Allow"
                      Principal:
                          AWS: !ImportValue ExportCfnIAMSwitchRoleIntegrationMasterArn
                      Action: "s3:*"
                      Resource:
                          - !Sub "arn:aws:s3:::${CfnS3BucketIntegratedMaster}"
                          - !Sub "arn:aws:s3:::${CfnS3BucketIntegratedMaster}/*"

#=====================================================================
# Outputs
#=====================================================================
Outputs:
    #-------------------------------------------------
    # S3 Bucket
    #-------------------------------------------------
    ExportCfnS3BucketArn:
        Value: !GetAtt CfnS3Bucket.Arn
        Export:
            Name: ExportCfnS3BucketArn

    ExportCfnS3BucketSnowflakeArn:
        Value: !GetAtt CfnS3BucketSnowflake.Arn
        Export:
            Name: ExportCfnS3BucketSnowflakeArn

    ExportCfnS3BucketSnowflakeBCArn:
        Value: !GetAtt CfnS3BucketSnowflakeBC.Arn
        Export:
            Name: ExportCfnS3BucketSnowflakeBCArn

    ExportCfnS3BucketIntegratedMasterArn:
        Value: !GetAtt CfnS3BucketIntegratedMaster.Arn
        Export:
            Name: ExportCfnS3BucketIntegratedMasterArn
AWSTemplateFormatVersion: 2010-09-09
#===================================================================================================
# Description: Template for creating stacks with all AWS resources.
#===================================================================================================
#=====================================================================
# Parameters
#=====================================================================
Parameters:
    #-------------------------------------------------
    # Common parameters
    #-------------------------------------------------
    System:
        Description: "System name"
        Type: String

    Iac:
        Description: "IaC type"
        Type: String

    #-------------------------------------------------
    # Environment-specific parameters
    #-------------------------------------------------
    Env:
        Description: "Environment"
        Type: String
        AllowedValues:
            - dev
            - stg
            - prd
            - poc
        Default: poc

    MyPC:
        Description: "My PC IP"
        Type: String

    #-------------------------------------------------
    # VPC parameters
    #-------------------------------------------------
    VpcCidr:
        Description: "VPC CIDR"
        Type: String

    #-------------------------------------------------
    # Subnet parameters
    #-------------------------------------------------
    #-------------------------------------------------
    # Public
    #-------------------------------------------------
    SubnetCidrPublic0:
        Description: "Subnet CIDR"
        Type: String

    SubnetCidrPublic1:
        Description: "Subnet CIDR"
        Type: String

    SubnetCidrPublic2:
        Description: "Subnet CIDR"
        Type: String

    SubnetAZPublic0:
        Description: "Subnet AZ"
        Type: String

    SubnetAZPublic1:
        Description: "Subnet AZ"
        Type: String

    SubnetAZPublic2:
        Description: "Subnet AZ"
        Type: String

    #-------------------------------------------------
    # Private egress
    #-------------------------------------------------
    SubnetCidrPrivateEgress0:
        Description: "Subnet CIDR"
        Type: String

    SubnetCidrPrivateEgress1:
        Description: "Subnet CIDR"
        Type: String

    SubnetCidrPrivateEgress2:
        Description: "Subnet CIDR"
        Type: String

    SubnetAZPrivateEgress0:
        Description: "Subnet AZ"
        Type: String

    SubnetAZPrivateEgress1:
        Description: "Subnet AZ"
        Type: String

    SubnetAZPrivateEgress2:
        Description: "Subnet AZ"
        Type: String

    #-------------------------------------------------
    # Private isolate
    #-------------------------------------------------
    SubnetCidrPrivateIsolate0:
        Description: "Subnet CIDR"
        Type: String

    SubnetCidrPrivateIsolate1:
        Description: "Subnet CIDR"
        Type: String

    SubnetCidrPrivateIsolate2:
        Description: "Subnet CIDR"
        Type: String

    SubnetAZPrivateIsolate0:
        Description: "Subnet AZ"
        Type: String

    SubnetAZPrivateIsolate1:
        Description: "Subnet AZ"
        Type: String

    SubnetAZPrivateIsolate2:
        Description: "Subnet AZ"
        Type: String

    #-------------------------------------------------
    # EC2 AMI parameters
    #-------------------------------------------------
    EC2AMIAmazonLinux2023:
        Description: "Amazon Linux 2023"
        Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>

    EC2AMIAmazonLinux2023Image:
        Description: "Amazon Linux 2023"
        Type: String

    EC2AMIRHEL9Image:
        Description: "RHEL 9"
        Type: String

    EC2AMIWindowsServer2022:
        Description: "Windows_Server 2022"
        Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>

    #-------------------------------------------------
    # EC2 Instance parameters
    #-------------------------------------------------
    IPPublic0BastionAmazonLinux2023:
        Description: "Amazon Linux 2023 IP"
        Type: String

    IPPublic0BastionRHEL9:
        Description: "RHEL 9 IP"
        Type: String

    IPPublic0BastionWindowsServer2022:
        Description: "Windows_Server 2022 IP"
        Type: String

    IPPrivateEgress0WebAmazonLinux2023:
        Description: "Amazon Linux 2023 IP"
        Type: String

    IPPrivateEgress0GWWindowsServer2022:
        Description: "Windows_Server 2022 IP"
        Type: String

#=====================================================================
# Resources
#=====================================================================
Resources:
    #-------------------------------------------------
    # IAM Stack
    #-------------------------------------------------
    CfnIamStack:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: ./iam/CFn-iam.yaml
            Parameters:
                System: !Sub ${System}
                IamRoleEc2: !Sub ${Iac}-${System}-${Env}-iam-role-ec2
                IamRoleBackupRds: !Sub ${Iac}-${System}-${Env}-iam-role-backup-rds
                IamRoleSnowflakeBC: !Sub ${Iac}-${System}-${Env}-iam-role-snowflake-bc
                # IamRoleSwitchIntegrationMaster: !Sub ${Iac}-${System}-${Env}-iam-role-switch-integrated-master
                # IamRoleServiceIntegrationMaster: !Sub ${Iac}-${System}-${Env}-iam-role-service-integrated-master

    #-------------------------------------------------
    # IAM User/Group Stack
    #-------------------------------------------------
    CfnIamUserGroupStack:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: ./iam/CFn-iam-user-group.yaml
            Parameters:
                System: !Sub ${System}
                IamSwitchPolicyPermitBoundaryIntegrationMaster: !Sub ${Iac}-${System}-${Env}-iam-switch-policy-permit-boundary-integration-master
                IamSwitchRoleIntegrationMaster: !Sub ${Iac}-${System}-${Env}-iam-switch-role-integration-master
                IamSwitchPolicyIntegrationMaster: !Sub ${Iac}-${System}-${Env}-iam-switch-policy-integration-master
                IamGroupIntegrationMaster: !Sub ${Iac}-${System}-${Env}-iam-group-integration-master
                IamUserIntegrationMaster: !Sub ${Iac}-${System}-${Env}-iam-user-integration-master

    #-------------------------------------------------
    # VPC stack
    #-------------------------------------------------
    CfnVpcStack:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: ./vpc/CFn-vpc-igw.yaml
            Parameters:
                System: !Sub ${System}
                VpcCidr: !Sub ${VpcCidr}
                Vpc: !Sub ${Iac}-${System}-${Env}-vpc
                InternetGateway: !Sub ${Iac}-${System}-${Env}-igw

    #-------------------------------------------------
    # Route & RouteTable & Subnet stack
    #-------------------------------------------------
    #-------------------------------------------------
    # Public
    #-------------------------------------------------
    CfnRouteRTSubnetPublicStack:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: ./vpc/CFn-route-rtb-subnet-public.yaml
            Parameters:
                System: !Sub ${System}
                #-------------------------------------------------
                # AZ0
                #-------------------------------------------------
                RouteTablePublic0: !Sub ${Iac}-${System}-${Env}-rtb-public-${SubnetAZPublic0}
                SubnetAZPublic0: !Sub ${SubnetAZPublic0}
                SubnetCidrPublic0: !Sub ${SubnetCidrPublic0}
                SubnetPublic0: !Sub ${Iac}-${System}-${Env}-subnet-public-${SubnetAZPublic0}
                #-------------------------------------------------
                # AZ1
                #-------------------------------------------------
                RouteTablePublic1: !Sub ${Iac}-${System}-${Env}-rtb-public-${SubnetAZPublic1}
                SubnetAZPublic1: !Sub ${SubnetAZPublic1}
                SubnetCidrPublic1: !Sub ${SubnetCidrPublic1}
                SubnetPublic1: !Sub ${Iac}-${System}-${Env}-subnet-public-${SubnetAZPublic1}
                #-------------------------------------------------
                # AZ2
                #-------------------------------------------------
                RouteTablePublic2: !Sub ${Iac}-${System}-${Env}-rtb-public-${SubnetAZPublic2}
                SubnetAZPublic2: !Sub ${SubnetAZPublic2}
                SubnetCidrPublic2: !Sub ${SubnetCidrPublic2}
                SubnetPublic2: !Sub ${Iac}-${System}-${Env}-subnet-public-${SubnetAZPublic2}
        DependsOn: CfnVpcStack

    #-------------------------------------------------
    # Private egress
    #-------------------------------------------------
    CfnRouteRTSubnetPrivateEgressStack:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: ./vpc/CFn-route-rtb-subnet-private-egress.yaml
            Parameters:
                System: !Sub ${System}
                #-------------------------------------------------
                # AZ0
                #-------------------------------------------------
                RouteTablePrivateEgress0: !Sub ${Iac}-${System}-${Env}-rtb-private-egress-${SubnetAZPrivateEgress0}
                SubnetAZPrivateEgress0: !Sub ${SubnetAZPrivateEgress0}
                SubnetCidrPrivateEgress0: !Sub ${SubnetCidrPrivateEgress0}
                SubnetPrivateEgress0: !Sub ${Iac}-${System}-${Env}-subnet-private-egress-${SubnetAZPrivateEgress0}
                #-------------------------------------------------
                # AZ1
                #-------------------------------------------------
                RouteTablePrivateEgress1: !Sub ${Iac}-${System}-${Env}-rtb-private-egress-${SubnetAZPrivateEgress1}
                SubnetAZPrivateEgress1: !Sub ${SubnetAZPrivateEgress1}
                SubnetCidrPrivateEgress1: !Sub ${SubnetCidrPrivateEgress1}
                SubnetPrivateEgress1: !Sub ${Iac}-${System}-${Env}-subnet-private-egress-${SubnetAZPrivateEgress1}
                #-------------------------------------------------
                # AZ2
                #-------------------------------------------------
                RouteTablePrivateEgress2: !Sub ${Iac}-${System}-${Env}-rtb-private-egress-${SubnetAZPrivateEgress2}
                SubnetAZPrivateEgress2: !Sub ${SubnetAZPrivateEgress2}
                SubnetCidrPrivateEgress2: !Sub ${SubnetCidrPrivateEgress2}
                SubnetPrivateEgress2: !Sub ${Iac}-${System}-${Env}-subnet-private-egress-${SubnetAZPrivateEgress2}
        DependsOn: CfnVpcStack

    #-------------------------------------------------
    # Private isolate
    #-------------------------------------------------
    CfnRouteRTSubnetPrivateIsolateStack:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: ./vpc/CFn-route-rtb-subnet-private-isolate.yaml
            Parameters:
                System: !Sub ${System}
                #-------------------------------------------------
                # AZ0
                #-------------------------------------------------
                RouteTablePrivateIsolate0: !Sub ${Iac}-${System}-${Env}-rtb-private-isolate-${SubnetAZPrivateIsolate0}
                SubnetAZPrivateIsolate0: !Sub ${SubnetAZPrivateIsolate0}
                SubnetCidrPrivateIsolate0: !Sub ${SubnetCidrPrivateIsolate0}
                SubnetPrivateIsolate0: !Sub ${Iac}-${System}-${Env}-subnet-private-isolate-${SubnetAZPrivateIsolate0}
                #-------------------------------------------------
                # AZ1
                #-------------------------------------------------
                RouteTablePrivateIsolate1: !Sub ${Iac}-${System}-${Env}-rtb-private-isolate-${SubnetAZPrivateIsolate1}
                SubnetAZPrivateIsolate1: !Sub ${SubnetAZPrivateIsolate1}
                SubnetCidrPrivateIsolate1: !Sub ${SubnetCidrPrivateIsolate1}
                SubnetPrivateIsolate1: !Sub ${Iac}-${System}-${Env}-subnet-private-isolate-${SubnetAZPrivateIsolate1}
                #-------------------------------------------------
                # AZ2
                #-------------------------------------------------
                RouteTablePrivateIsolate2: !Sub ${Iac}-${System}-${Env}-rtb-private-isolate-${SubnetAZPrivateIsolate2}
                SubnetAZPrivateIsolate2: !Sub ${SubnetAZPrivateIsolate2}
                SubnetCidrPrivateIsolate2: !Sub ${SubnetCidrPrivateIsolate2}
                SubnetPrivateIsolate2: !Sub ${Iac}-${System}-${Env}-subnet-private-isolate-${SubnetAZPrivateIsolate2}
        DependsOn: CfnVpcStack

    #-------------------------------------------------
    # SecurityGroup Stack
    #-------------------------------------------------
    CfnSecurityGroupStack:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: ./vpc/CFn-sg.yaml
            Parameters:
                System: !Sub ${System}
                VpcCidr: !Sub ${VpcCidr}
                MyPC: !Sub ${MyPC}
                SecurityGroupEC2: !Sub ${Iac}-${System}-${Env}-sg-ec2
                SecurityGroupALB: !Sub ${Iac}-${System}-${Env}-sg-alb
                SecurityGroupNAT: !Sub ${Iac}-${System}-${Env}-sg-nat
                SecurityGroupRDS: !Sub ${Iac}-${System}-${Env}-sg-rds
                SecurityGroupVPCEndpoint: !Sub ${Iac}-${System}-${Env}-sg-vpc-endpoint
        DependsOn: CfnVpcStack

    #-------------------------------------------------
    # KeyPair Stack
    #-------------------------------------------------
    CfnKeyPairStack:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: ./ec2/CFn-keypair.yaml
            Parameters:
                System: !Sub ${System}
                KeyPair: !Sub ${Iac}-${System}-${Env}-keypair
                KeyPairIntegratedMaster: !Sub ${Iac}-${System}-${Env}-keypair-integrated-master

    #-------------------------------------------------
    # EC2 Instance Stack
    #-------------------------------------------------
    CfnEC2InstancePublic0BastionAmazonLinux2023Stack:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: ./ec2/CFn-ec2-instance-public0-bastion-amazonlinux2023.yaml
            Parameters:
                System: !Sub ${System}
                SubnetAZPublic0: !Sub ${SubnetAZPublic0}
                EC2AMIAmazonLinux2023: !Ref EC2AMIAmazonLinux2023Image
                IPPublic0AmazonLinux2023: !Sub ${IPPublic0BastionAmazonLinux2023}
                InstanceType: t2.micro
                AssociatePublicIpAddress: true
                VolumeSize: 8
                VolumeType: gp3
                EC2InstancePublic0BastionAmazonLinux2023: !Sub ${Iac}-${System}-${Env}-ec2-instance-${SubnetAZPublic0}-bastion-amazonlinux2023
        DependsOn: [CfnIamStack, CfnKeyPairStack, CfnSecurityGroupStack]

    # CfnEC2InstancePublic0BastionRHEL9Stack:
    #     Type: AWS::CloudFormation::Stack
    #     Properties:
    #         TemplateURL: ./ec2/CFn-ec2-instance-public0-bastion-rhel9.yaml
    #         Parameters:
    #             System: !Sub ${System}
    #             SubnetAZPublic0: !Sub ${SubnetAZPublic0}
    #             EC2AMIRHEL9: !Ref EC2AMIRHEL9Image
    #             IPPublic0RHEL9: !Sub ${IPPublic0BastionRHEL9}
    #             InstanceType: t2.micro
    #             AssociatePublicIpAddress: true
    #             VolumeSize: 8
    #             VolumeType: gp3
    #             EC2InstancePublic0BastionRHEL9: !Sub ${Iac}-${System}-${Env}-ec2-instance-${SubnetAZPublic0}-bastion-rhel9
    #             LaunchTemplateName: !Sub ${Iac}-${System}-${Env}-launchtemplate-ec2-instance-imdsv2-${SubnetAZPublic0}-bastion-rhel9
    #     DependsOn: [CfnIamStack, CfnKeyPairStack, CfnSecurityGroupStack]

    # CfnEC2InstancePublic0BastionWindowsServer2022Stack:
    #     Type: AWS::CloudFormation::Stack
    #     Properties:
    #         TemplateURL: ./ec2/CFn-ec2-instance-public0-bastion-windowsserver2022.yaml
    #         Parameters:
    #             System: !Sub ${System}
    #             SubnetAZPublic0: !Sub ${SubnetAZPublic0}
    #             EC2AMIWindowsServer2022: !Ref EC2AMIWindowsServer2022
    #             IPPublic0BastionWindowsServer2022: !Sub ${IPPublic0BastionWindowsServer2022}
    #             InstanceType: t2.medium
    #             AssociatePublicIpAddress: true
    #             VolumeSize: 30
    #             VolumeType: gp2
    #             EC2InstancePublic0BastionWindowsServer2022: !Sub ${Iac}-${System}-${Env}-ec2-instance-${SubnetAZPublic0}-bastion-windowsserver2022
    #             LaunchTemplateName: !Sub ${Iac}-${System}-${Env}-launchtemplate-ec2-instance-imdsv2-${SubnetAZPublic0}-bastion-windowsserver2022
    #     DependsOn: [CfnIamStack, CfnKeyPairStack, CfnSecurityGroupStack]

    # CfnEC2InstancePrivateEgress0WebAmazonLinux2023Stack:
    #     Type: AWS::CloudFormation::Stack
    #     Properties:
    #         TemplateURL: ./ec2/CFn-ec2-instance-private-egress0-web-amazonlinux2023.yaml
    #         Parameters:
    #             System: !Sub ${System}
    #             SubnetAZPrivateEgress0: !Sub ${SubnetAZPrivateEgress0}
    #             EC2AMIAmazonLinux2023: !Ref EC2AMIAmazonLinux2023Image
    #             IPPrivateEgress0WebAmazonLinux2023: !Sub ${IPPrivateEgress0WebAmazonLinux2023}
    #             InstanceType: t2.micro
    #             AssociatePublicIpAddress: false
    #             VolumeSize: 8
    #             VolumeType: gp3
    #             EC2InstancePrivateEgress0WebAmazonLinux2023: !Sub ${Iac}-${System}-${Env}-ec2-instance-${SubnetAZPrivateEgress0}-web-amazonlinux2023
    #     DependsOn: [CfnIamStack, CfnKeyPairStack, CfnSecurityGroupStack]

    # CfnEC2InstancePrivateEgress0GWWindowsServer2022Stack:
    #     Type: AWS::CloudFormation::Stack
    #     Properties:
    #         TemplateURL: ./ec2/CFn-ec2-instance-private-egress0-gw-windowsserver2022.yaml
    #         Parameters:
    #             System: !Sub ${System}
    #             SubnetAZPrivateEgress0: !Sub ${SubnetAZPrivateEgress0}
    #             EC2AMIWindowsServer2022: !Ref EC2AMIWindowsServer2022
    #             IPPrivateEgress0GWWindowsServer2022: !Sub ${IPPrivateEgress0GWWindowsServer2022}
    #             InstanceType: t2.medium
    #             AssociatePublicIpAddress: false
    #             VolumeSize: 30
    #             VolumeType: gp2
    #             EC2InstancePrivateEgress0GWWindowsServer2022: !Sub ${Iac}-${System}-${Env}-ec2-instance-${SubnetAZPrivateEgress0}-gw-windowswerver2022
    #             LaunchTemplateName: !Sub ${Iac}-${System}-${Env}-launchtemplate-ec2-instance-imdsv2-${SubnetAZPrivateEgress0}-gw-windowswerver2022
    #     DependsOn: [CfnIamStack, CfnKeyPairStack, CfnSecurityGroupStack]

    #-------------------------------------------------
    # NAT Gateway Stack
    #-------------------------------------------------
    # CfnNATGatewayStack:
    #     Type: AWS::CloudFormation::Stack
    #     Properties:
    #         TemplateURL: ./vpc/CFn-nat.yaml
    #         Parameters:
    #             System: !Sub ${System}
    #             NATGateway: !Sub ${Iac}-${System}-${Env}-nat
    #     DependsOn:
    #         [CfnRouteRTSubnetPublicStack, CfnRouteRTSubnetPrivateEgressStack]

    # ------------------------------------------------------------#
    # ALB Stack
    # ------------------------------------------------------------#
    # CfnALBStack:
    #     Type: AWS::CloudFormation::Stack
    #     Properties:
    #         TemplateURL: ./elb/CFn-alb-tg.yaml
    #         Parameters:
    #             System: !Sub ${System}
    #             TargetGroup: !Sub ${Iac}-${System}-${Env}-tg
    #             ALB: !Sub ${Iac}-${System}-${Env}-alb
    #     DependsOn:
    #         [
    #             CfnRouteRTSubnetPublicStack,
    #             CfnSecurityGroupStack,
    #             CfnEC2InstancePrivateEgress0WebAmazonLinux2023Stack,
    #         ]

    #-------------------------------------------------
    # Endpoint Stack
    #-------------------------------------------------
    CfnEndpointStack:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: ./vpc/CFn-endpoint.yaml
            Parameters:
                System: !Sub ${System}
        DependsOn:
            [
                CfnVpcStack,
                CfnRouteRTSubnetPrivateEgressStack,
                CfnSecurityGroupStack,
            ]

    #-------------------------------------------------
    # S3 Bucket Stack
    #-------------------------------------------------
    CfnS3BucketStack:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: ./s3/CFn-s3-bucket.yaml
            Parameters:
                System: !Sub ${System}
                S3Bucket: !Sub ${Iac}-${System}-${Env}-s3-bucket-${AWS::AccountId}
                S3BucketSnowflake: !Sub ${Iac}-${System}-${Env}-s3-bucket-snowflake-${AWS::AccountId}
                S3BucketSnowflakeBC: !Sub ${Iac}-${System}-${Env}-s3-bucket-snowflake-bc-${AWS::AccountId}
                S3BucketIntegratedMaster: !Sub ${Iac}-${System}-${Env}-s3-bucket-integrated-master-${AWS::AccountId}
        DependsOn: [CfnIamUserGroupStack]

    #-------------------------------------------------
    # SNS Stack
    #-------------------------------------------------
    CfnSNSStack:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: ./sns/CFn-sns.yaml
            Parameters:
                System: !Sub ${System}
                Topic: !Sub ${Iac}-${System}-${Env}-sns-topic

    #-------------------------------------------------
    # SSM Association Stack
    #-------------------------------------------------
    # CfnSSMAssociationStack:
    #     Type: AWS::CloudFormation::Stack
    #     Properties:
    #         TemplateURL: ./ssm/CFn-association.yaml
    #         Parameters:
    #             System: !Sub ${System}
    #             AssociationName: !Sub ${Iac}-${System}-${Env}-ssm-association-script

    #-------------------------------------------------
    # SSM MaintenanceWindow Stack
    #-------------------------------------------------
    # CfnSSMMaintenanceWindowStack:
    #     Type: AWS::CloudFormation::Stack
    #     Properties:
    #         TemplateURL: ./ssm/CFn-maintenancewindow.yaml
    #         Parameters:
    #             System: !Sub ${System}
    #             MaintenanceWindowName: !Sub ${Iac}-${System}-${Env}-ssm-maintwin-sched-script
    #             DocumentName: !Sub ${Iac}-${System}-${Env}-ssm-doc-sched-script
    #             MaintenanceWindowTargetName: !Sub ${Iac}-${System}-${Env}-ssm-maintwin-target-sched-script

    #-------------------------------------------------
    # SSM Automation Stack + IAM Role + Events Rule
    #-------------------------------------------------
    # CfnSSMAutomationStack:
    #     Type: AWS::CloudFormation::Stack
    #     Properties:
    #         TemplateURL: ./ssm/CFn-automation.yaml
    #         Parameters:
    #             System: !Sub ${System}
    #             AutomationStartEC2InstancesName: !Sub ${Iac}-${System}-${Env}-ssm-auto-ec2-instance-start-by-tag
    #             AutomationStopEC2InstancesName: !Sub ${Iac}-${System}-${Env}-ssm-auto-ec2-instance-stop-by-tag
    #             RoleName: !Sub ${Iac}-${System}-${Env}-iam-role-ssm-auto-ec2-instance-stop-start-by-tag
    #             PolicyName: !Sub ${Iac}-${System}-${Env}-iam-policy-ssm-auto-ec2-instance-stop-start-by-tag
    #             EventsRuleStartEC2InstancesName: !Sub ${Iac}-${System}-${Env}-events-rule-ssm-auto-ec2-instance-start-by-tag
    #             EventsRuleStopEC2InstancesName: !Sub ${Iac}-${System}-${Env}-events-rule-ssm-auto-ec2-instance-stop-by-tag

    #-------------------------------------------------
    # RDS Stack
    #-------------------------------------------------
    CfnRDSStack:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: ./rds/CFn-rds.yaml
            Parameters:
                System: !Sub ${System}
                SubnetAZPublic0: !Sub ${SubnetAZPublic0}
                DBSubnetGroup: !Sub ${Iac}-${System}-${Env}-rds-subnetgroup
                DBParameterGroup: !Sub ${Iac}-${System}-${Env}-rds-parametergroup
                DBParameterGroupFamily: postgres16
                DatabaseMaster: postgres
                Database: sampledb
                DBInstanceIdentifier: !Sub ${Iac}-${System}-${Env}-rds-database-instance
                Engine: postgres
                EngineVersion: 16.6
                DBInstanceClass: db.t4g.micro
        DependsOn:
            [
                CfnRouteRTSubnetPublicStack,
                CfnRouteRTSubnetPrivateEgressStack,
                CfnRouteRTSubnetPrivateIsolateStack,
            ]

    #-------------------------------------------------
    # BackupVault Stack
    #-------------------------------------------------
    # CfnBackupVaultStack:
    #     Type: AWS::CloudFormation::Stack
    #     Properties:
    #         TemplateURL: ./backup/CFn-vault.yaml
    #         Parameters:
    #             System: !Sub ${System}
    #             BackupVaulRDS: !Sub ${Iac}-${System}-${Env}-backup-vault-rds
AWSTemplateFormatVersion: 2010-09-09
#===================================================================================================
# Description: Templates for creating IAM-related resources.
# The private key can be displayed on the AWS Management Console screen below.
# Example) AWS Systems Manager > Parameter Store > /ec2/keypair/key-0f73d85118a4156ee > Summary > Value (displays the decrypted value)
#===================================================================================================
#=====================================================================
# Parameters
#=====================================================================
Parameters:
    #-------------------------------------------------
    # Common parameters
    #-------------------------------------------------
    System:
        Description: "System name"
        Type: String

    #-------------------------------------------------
    # KeyPair parameters
    #-------------------------------------------------
    KeyPair:
        Description: "KeyPair name"
        Type: String

    KeyPairIntegratedMaster:
        Description: "KeyPair name"
        Type: String

#=====================================================================
# Resources
#=====================================================================
Resources:
    #-------------------------------------------------
    # KeyPair
    #-------------------------------------------------
    CfnKeyPair:
        Type: "AWS::EC2::KeyPair"
        Properties:
            KeyName: !Ref KeyPair
            KeyType: "rsa"
            Tags:
                - Key: "System"
                  Value: !Ref System
                - Key: "Name"
                  Value: !Ref KeyPair

    #-------------------------------------------------
    # KeyPair Integrated Master
    #-------------------------------------------------
    CfnKeyPairIntegratedMaster:
        Type: "AWS::EC2::KeyPair"
        Properties:
            KeyName: !Ref KeyPairIntegratedMaster
            KeyType: "rsa"
            Tags:
                - Key: "System"
                  Value: !Ref System
                - Key: "Name"
                  Value: !Ref KeyPairIntegratedMaster

#=====================================================================
# Outputs
#=====================================================================
Outputs:
    #-------------------------------------------------
    # KeyPair
    #-------------------------------------------------
    ExportCfnKeyPairId:
        Value: !Ref CfnKeyPair
        Export:
            Name: ExportCfnKeyPairId

    #-------------------------------------------------
    # KeyPair Integrated Master
    #-------------------------------------------------
    ExportCfnKeyPairIntegratedMasterId:
        Value: !Ref CfnKeyPairIntegratedMaster
        Export:
            Name: ExportCfnKeyPairIntegratedMasterId
